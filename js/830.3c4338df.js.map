{"version":3,"file":"js/830.3c4338df.js","mappings":"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","sources":["webpack://jekedao_front/./src/views/Regist.vue","webpack://jekedao_front/src/views/Regist.vue","webpack://jekedao_front/./src/views/Regist.vue?0433","webpack://jekedao_front/./src/views/Regist.vue?1e4e"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"home\",style:({ backgroundImage: 'url(' + _vm.background + ')' })},[_c('div',{staticClass:\"overlay\"}),_c('div',{staticClass:\"content\"},[_c('h1',[_vm._v(_vm._s(_vm.texts.h1[_vm.currentLanguage]))]),_c('p',[_vm._v(_vm._s(_vm.texts.p[_vm.currentLanguage]))]),_c('el-form',{ref:\"form\",staticClass:\"custom-label\",attrs:{\"model\":_vm.formData,\"rules\":_vm.rules,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"prop\":\"nickname\"}},[_c('template',{slot:\"label\"},[_c('span',{staticClass:\"custom-label\"},[_vm._v(_vm._s(_vm.abbr.nickname[_vm.currentLanguage]))])]),_c('el-input',{attrs:{\"placeholder\":_vm.prompts.nickname[_vm.currentLanguage]},model:{value:(_vm.formData.nickname),callback:function ($$v) {_vm.$set(_vm.formData, \"nickname\", $$v)},expression:\"formData.nickname\"}})],2),_c('el-form-item',{attrs:{\"prop\":\"username\"}},[_c('template',{slot:\"label\"},[_c('span',{staticClass:\"custom-label\"},[_vm._v(_vm._s(_vm.abbr.username[_vm.currentLanguage]))])]),_c('el-input',{attrs:{\"placeholder\":_vm.prompts.username[_vm.currentLanguage]},model:{value:(_vm.formData.username),callback:function ($$v) {_vm.$set(_vm.formData, \"username\", $$v)},expression:\"formData.username\"}})],2),_c('el-form-item',{attrs:{\"prop\":\"password\"}},[_c('template',{slot:\"label\"},[_c('span',{staticClass:\"custom-label\"},[_vm._v(_vm._s(_vm.abbr.password[_vm.currentLanguage]))])]),_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":_vm.prompts.password[_vm.currentLanguage]},model:{value:(_vm.formData.password),callback:function ($$v) {_vm.$set(_vm.formData, \"password\", $$v)},expression:\"formData.password\"}})],2),_c('el-form-item',{attrs:{\"prop\":\"confirmPassword\"}},[_c('template',{slot:\"label\"},[_c('span',{staticClass:\"custom-label\"},[_vm._v(_vm._s(_vm.abbr.confirmPassword[_vm.currentLanguage]))])]),_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":_vm.prompts.confirmPassword[_vm.currentLanguage]},model:{value:(_vm.formData.confirmPassword),callback:function ($$v) {_vm.$set(_vm.formData, \"confirmPassword\", $$v)},expression:\"formData.confirmPassword\"}})],2),_c('el-form-item',[_c('el-button',{staticClass:\"return-button\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.goBack}},[_vm._v(_vm._s(_vm.currentLanguage == 'Chinese' ? \"返回\" : \"Return\"))]),_c('el-button',{staticClass:\"center-button\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onSubmitRegist}},[_vm._v(_vm._s(_vm.currentLanguage == 'Chinese' ? \"提交\" : \"Submit\"))])],1)],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"home\"  :style=\"{ backgroundImage: 'url(' + background + ')' }\">\r\n    <div class=\"overlay\"></div>\r\n    <div class=\"content\">\r\n      <h1>{{ texts.h1[currentLanguage] }}</h1>\r\n      <p>{{ texts.p[currentLanguage] }}</p>\r\n      <el-form :model=\"formData\" ref=\"form\" :rules=\"rules\" label-width=\"80px\" class=\"custom-label\">\r\n        <el-form-item prop=\"nickname\">\r\n          <template slot=\"label\">\r\n            <span class=\"custom-label\">{{ abbr.nickname[currentLanguage] }}</span>\r\n          </template>\r\n          <el-input v-model=\"formData.nickname\" :placeholder=\"prompts.nickname[currentLanguage]\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"username\">\r\n          <template slot=\"label\">\r\n            <span class=\"custom-label\">{{ abbr.username[currentLanguage] }}</span>\r\n          </template>\r\n          <el-input v-model=\"formData.username\" :placeholder=\"prompts.username[currentLanguage]\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <template slot=\"label\">\r\n            <span class=\"custom-label\">{{ abbr.password[currentLanguage] }}</span>\r\n          </template>\r\n          <el-input v-model=\"formData.password\" type=\"password\" :placeholder=\"prompts.password[currentLanguage]\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"confirmPassword\">\r\n          <template slot=\"label\">\r\n            <span class=\"custom-label\">{{ abbr.confirmPassword[currentLanguage] }}</span>\r\n          </template>\r\n          <el-input v-model=\"formData.confirmPassword\" type=\"password\" :placeholder=\"prompts.confirmPassword[currentLanguage]\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" class=\"return-button\" @click=\"goBack\">{{currentLanguage == 'Chinese' ? \"返回\" : \"Return\"}}</el-button>\r\n          <el-button type=\"primary\" class=\"center-button\" @click=\"onSubmitRegist\">{{currentLanguage == 'Chinese' ? \"提交\" : \"Submit\"}}</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: 'RegistPage',\r\n  //设置背景图和文字\r\n  data() {\r\n    return {\r\n      //图片及文字\r\n      background: require('@/assets/latterns_building.jpg'),\r\n      texts:{ \r\n        h1: {Chinese:'注册', English:'Regist', Louis:'用户注册'}, \r\n        p: {Chinese:'加入我们的逐梦派对', English:'Join our party of dream', Louis:'User Registration Interface'}, \r\n      },\r\n      //提示词\r\n      // 提示词根据语言切换\r\n      abbr:{\r\n        nickname: {Chinese:'昵称', English:'Nickname', Louis:'Nickname'},\r\n        username: {Chinese:'账号', English:'Username', Louis:'Username'},\r\n        password: {Chinese:'密码', English:'Password', Louis:'Password'},\r\n        confirmPassword: {Chinese:'确认密码', English:'Confirm', Louis:'Confirm'},\r\n      },\r\n      prompts:{\r\n        nickname: {Chinese:'请输入昵称', English:'Enter your nickname', Louis:'Nickname'},\r\n        username: {Chinese:'请输入账号', English:'Enter your username', Louis:'Username'},\r\n        password: {Chinese:'请输入密码', English:'Enter your password', Louis:'Password'},\r\n        confirmPassword: {Chinese:'请确认密码', English:'Confirm your password', Louis:'Confirm Password'},\r\n        successRegist: {Chinese:'注册成功，请重新登陆！', English:'Registration successful, please log in again!', Louis:'Finish Registration!'},\r\n        failSubmit: {Chinese:'有地方填错了，要不再试试。', English:'Mistakes somewhere, please try again.', Louis:'Fail Submission!'}\r\n      },\r\n      //输入信息\r\n      formData: {\r\n        nickname: '',\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n      },\r\n      rules: {\r\n        nickname: [{ required: true, message: '请输入昵称', trigger: 'blur' },\r\n                   { validator: this.validateNickname, trigger: 'blur' },],\r\n        username: [{ required: true, message: '请输入账号', trigger: 'blur' },\r\n                   { validator: this.validateUsername, trigger: 'blur' },],\r\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' },\r\n                   { validator: this.validatePassword, trigger: 'blur' },],\r\n        confirmPassword: [{ required: true, message: '请确认密码', trigger: 'blur' },\r\n                          { validator: this.validateConfirmPassword, trigger: 'blur' },],\r\n      },\r\n      //判断变量\r\n      nicknameRepeat: false,\r\n      usernameRepeat: false,\r\n    }\r\n  },\r\n  //返回当前背景及文字\r\n  computed: {\r\n    currentLanguage() {\r\n      return this.$store.getters.curLanguage;\r\n    },\r\n  },\r\n  //时间控制，切换图片及文字\r\n  methods: {\r\n    successRegist() {\r\n      this.$message({\r\n          message: this.prompts.successRegist[this.currentLanguage],\r\n          type: 'success'\r\n        });\r\n      this.$router.push('/login');\r\n    },\r\n    onSubmitRegist() { \r\n      console.log(this.$refs.form); // Check if $refs is defined and contains the form reference\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          // 所有验证通过，可以提交表单\r\n          // 执行提交逻辑（注册）\r\n          console.log(\"submit! regist\"); \r\n          axios \r\n            .post(\"api/users/\", this.formData) \r\n            .then((res) => { \r\n            //get()中的参数要与mock.js文件中的Mock.mock()配置的路由保持一致 \r\n          //axios\r\n            //.post('http://127.0.0.1:8000/latterns/',this.formData) \r\n           //.then(res => {\r\n            //get()中的参数要与mock.js文件中的Mock.mock()配置的路由保持一致 \r\n            console.log(res.data); //在console中看到数据 \r\n            console.log(this.formData); //在console中看到数据 \r\n          }) \r\n          .catch(() => { \r\n            alert(\"regist-submit-wrong\"); \r\n          }); \r\n          //完成提交，跳转登录页面\r\n          this.successRegist();\r\n        } else {\r\n          this.$message.error(this.prompts.failSubmit[this.currentLanguage]);\r\n        }\r\n      });\r\n    },\r\n    validateNickname(rule, value, callback) {\r\n      // 昵称验证逻辑，与数据库查重\r\n      axios.get(\"api/users/\") \r\n        .then((res) => { \r\n          //get()中的参数要与mock.js文件中的Mock.mock()配置的路由保持一致 \r\n      //axios.get('http://127.0.0.1:8000/users',)\r\n        //.then(res => {\r\n          //get()中的参数要与mock.js文件中的Mock.mock()配置的路由保持一致 \r\n          this.nicknameRepeat = res.data.find(user => user.nickname === value); \r\n        }) \r\n        .catch(() => { \r\n          alert(\"nickname-check-wrong\"); \r\n        });\r\n      if (this.nicknameRepeat) {\r\n        callback(new Error('昵称重复'));\r\n      } else {\r\n        callback();\r\n      }\r\n    },\r\n    validateUsername(rule, value, callback) {\r\n      // 账号验证逻辑，与数据库查重\r\n      axios.get(\"api/users/\") \r\n        .then((res) => { \r\n          //get()中的参数要与mock.js文件中的Mock.mock()配置的路由保持一致 \r\n      //axios.get('http://127.0.0.1:8000/users',)\r\n        //.then(res => {\r\n          //get()中的参数要与mock.js文件中的Mock.mock()配置的路由保持一致 \r\n          this.usernameRepeat = res.data.find(user => user.username === value); \r\n        }) \r\n        .catch(() => { \r\n          alert(\"nickname-check-wrong\"); \r\n        });\r\n      if (value.length < 6) {\r\n        callback(new Error('账号长度不能少于6位'));\r\n      } else if (this.usernameRepeat) {\r\n        callback(new Error('账号重复'));\r\n      } else {\r\n        callback();\r\n      }\r\n    },\r\n    validatePassword(rule, value, callback) {\r\n      // 密码验证逻辑，可以根据需求自定义\r\n      // 例如，检查密码是否符合一定的要求，比如长度、包含字母和数字等\r\n      if (value.length < 6) {\r\n        callback(new Error('密码长度不能少于6位'));\r\n      } else {\r\n        callback();\r\n      }\r\n    },\r\n    validateConfirmPassword(rule, value, callback) {\r\n      // 确认密码验证逻辑\r\n      if (value !== this.formData.password) {\r\n        callback(new Error('两次输入的密码不一致'));\r\n      } else {\r\n        callback();\r\n      }\r\n    },\r\n    //返回上一个页面\r\n    goBack() {\r\n      this.$router.go(-1);\r\n      // 或者使用 this.$router.back();\r\n    },\r\n  },\r\n  //钩子函数\r\n  created() {\r\n    // 隐藏音频按钮\r\n    this.$store.commit('hideAudioButton');\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.home {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  overflow: hidden; /* 防止黑框溢出 */\r\n}\r\n\r\n.overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 10%;\r\n  width: 80%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5); /* 黑色半透明背景 */\r\n  z-index: 0;\r\n}\r\n\r\n.content {\r\n  position: absolute;\r\n  top: 40%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  text-align: center;\r\n  z-index: 2;\r\n  color: rgb(124, 222, 240);\r\n  text-shadow: 1px 1px 2px rgb(247, 242, 170);\r\n}\r\n\r\nh1 {\r\n  font-size: 2.5rem;\r\n  margin-bottom: 20px;\r\n}\r\n\r\np {\r\n  font-size: 1.2rem;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n/*输入框*/\r\n.custom-label {\r\n  color: rgb(28, 241, 63);\r\n}\r\n\r\n/*按钮*/\r\nbutton {\r\n  background-color: rgba(52, 152, 219, 0.322);\r\n  color: #fff;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n}\r\n  \r\nbutton:hover {\r\n  background-color: rgba(25, 170, 238, 0.777);\r\n}\r\n\r\n.center-button {\r\n  position: absolute;\r\n  text-align: center;\r\n  top: 70%;\r\n}\r\n\r\n.return-button {\r\n  position: absolute;\r\n  text-align: center;\r\n  left: 0%;\r\n  top: 70%;\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Regist.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Regist.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Regist.vue?vue&type=template&id=241379d1&scoped=true\"\nimport script from \"./Regist.vue?vue&type=script&lang=js\"\nexport * from \"./Regist.vue?vue&type=script&lang=js\"\nimport style0 from \"./Regist.vue?vue&type=style&index=0&id=241379d1&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"241379d1\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","style","backgroundImage","background","_v","_s","texts","h1","currentLanguage","p","ref","attrs","formData","rules","slot","abbr","nickname","prompts","model","value","callback","$$v","$set","expression","username","password","confirmPassword","on","goBack","onSubmitRegist","staticRenderFns","name","data","require","Chinese","English","Louis","successRegist","failSubmit","required","message","trigger","validator","validateNickname","validateUsername","validatePassword","validateConfirmPassword","nicknameRepeat","usernameRepeat","computed","$store","getters","curLanguage","methods","$message","type","$router","push","console","log","$refs","form","validate","valid","axios","post","then","res","catch","alert","error","rule","get","find","user","Error","length","go","created","commit","component"],"sourceRoot":""}